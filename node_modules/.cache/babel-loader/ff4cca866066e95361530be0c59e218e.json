{"ast":null,"code":"import _defineProperty from\"/Users/jameskelly/Documents/Projects/portfolio-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/jameskelly/Documents/Projects/portfolio-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jameskelly/Documents/Projects/portfolio-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jameskelly/Documents/Projects/portfolio-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jameskelly/Documents/Projects/portfolio-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import Axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactPage=/*#__PURE__*/function(_React$Component){_inherits(ContactPage,_React$Component);var _super=_createSuper(ContactPage);function ContactPage(props){var _this;_classCallCheck(this,ContactPage);_this=_super.call(this,props);_this.handleChange=function(event){console.log(event);var target=event.target;var value=target.type==='checkBox'?target.checked:target.value;var name=target.name;_this.setState(_defineProperty({},name,value));};_this.handleSubmit=function(event){event.preventDefault();_this.setState({disabled:true});Axios.post('http://localhost:3030/api/email',_this.state).then(function(res){if(res.data.success){_this.setState({disabled:false,emailSent:true});}else{_this.setState({disabled:false,emailSent:false});}}).catch(function(err){_this.setState({disabled:false,emailSent:false});});};_this.state={name:'',email:'',message:'',disabled:false,emailSent:null};return _this;}// Method to handle changes in submission fields\n_createClass(ContactPage,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(\"h1\",{className:\"py-4 mb-5 display-3 font-weight-bolder\",children:\"Let's Get in Touch!\"})})}),/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form,{onSubmit:this.handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"full-name\",children:\"Full Name\"}),/*#__PURE__*/_jsx(Form.Control,{id:\"full-name\",name:\"name\",type:\"text\",value:this.state.name,onChange:this.handleChange})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,{id:\"email\",name:\"email\",type:\"email\",value:this.state.email,onChange:this.handleChange})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"message\",children:\"Message\"}),/*#__PURE__*/_jsx(Form.Control,{id:\"message\",name:\"message\",as:\"textarea\",rows:\"3\",value:this.state.message,onChange:this.handleChange})]}),/*#__PURE__*/_jsx(Button,{className:\"mb-2 d-inline-block\",variant:\"primary\",type:\"submit\",disabled:this.state.disabled,style:{backgroundColor:'black',color:'white',fontSize:'20px',padding:'5px 50px',borderRadius:'5px',outline:'none',outlineColor:'black',outlineOffset:'none',margin:'10px 0px',cursor:'pointer'},children:\"Send\"}),this.state.emailSent===true&&/*#__PURE__*/_jsx(\"p\",{className:\"d-inline success-msg\",children:\"Email Sent!\"}),this.state.emailSent===false&&/*#__PURE__*/_jsx(\"p\",{className:\"d-inline err-msg\",children:\"Email failed to send.\"})]})})})]})});}}]);return ContactPage;}(React.Component);export default ContactPage;","map":{"version":3,"sources":["/Users/jameskelly/Documents/Projects/portfolio-website/src/pages/Contact.js"],"names":["React","Container","Row","Col","Form","Button","Axios","ContactPage","props","handleChange","event","console","log","target","value","type","checked","name","setState","handleSubmit","preventDefault","disabled","post","state","then","res","data","success","emailSent","catch","err","email","message","backgroundColor","color","fontSize","padding","borderRadius","outline","outlineColor","outlineOffset","margin","cursor","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Axios from 'axios';\n\nclass ContactPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            disabled: false,\n            emailSent: null\n        }\n    }\n\n    // Method to handle changes in submission fields\n    handleChange = (event) => {\n        console.log(event);\n\n        const target = event.target;\n        const value = target.type === 'checkBox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    // Method to handle submission of email message\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.setState({\n            disabled: true\n        });\n\n        Axios.post('http://localhost:3030/api/email', this.state)\n            .then(res => {\n                if (res.data.success) {\n                    this.setState({\n                        disabled: false,\n                        emailSent: true\n                    });\n                }\n                else {\n                    this.setState({\n                        disabled: false,\n                        emailSent: false\n                    });\n                }\n            })\n            .catch(err => {\n                this.setState({\n                    disabled: false,\n                    emailSent: false\n                });\n            });\n    }\n\n    render() {\n        return(\n            <div>\n                <Container fluid = { true }>\n                    <Row className = \"justify-content-center\">\n                        <Col md = {6}>\n                            <h1 className = \"py-4 mb-5 display-3 font-weight-bolder\">\n                                Let's Get in Touch!\n                            </h1>\n                        </Col>\n                    </Row>\n                    <Row className = \"justify-content-center\">\n                        <Col md = {6}>\n                            <Form onSubmit = { this.handleSubmit }>\n                                <Form.Group>\n                                    <Form.Label htmlFor = \"full-name\">Full Name</Form.Label>\n                                    <Form.Control id = \"full-name\" name = \"name\" type = \"text\" value = { this.state.name }\n                                        onChange = { this.handleChange }\n                                    />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label htmlFor = \"email\">Email</Form.Label>\n                                    <Form.Control id = \"email\" name = \"email\" type = \"email\" value = { this.state.email }\n                                        onChange = { this.handleChange }\n                                    />\n                                </Form.Group>\n\n                                <Form.Group>\n                                    <Form.Label htmlFor = \"message\">Message</Form.Label>\n                                    <Form.Control id = \"message\" name = \"message\" as = \"textarea\" rows = \"3\"\n                                        value = { this.state.message } onChange = { this.handleChange }\n                                    />\n                                </Form.Group>\n\n                                <Button className = \"mb-2 d-inline-block\" variant = \"primary\" type = \"submit\"\n                                    disabled = { this.state.disabled }\n                                    style = {{\n                                        backgroundColor: 'black',\n                                        color: 'white',\n                                        fontSize: '20px',\n                                        padding: '5px 50px',\n                                        borderRadius: '5px',\n                                        outline: 'none',\n                                        outlineColor: 'black',\n                                        outlineOffset: 'none',\n                                        margin: '10px 0px',\n                                        cursor: 'pointer'\n                                    }}>\n                                    Send\n                                </Button>\n\n                                { this.state.emailSent === true && <p className = \"d-inline success-msg\">Email Sent!</p> }\n                                { this.state.emailSent === false && <p className = \"d-inline err-msg\">Email failed to send.</p> }\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default ContactPage;"]},"metadata":{},"sourceType":"module"}